<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My Projects on My Website</title><link>https://example.org/projects/</link><description>Recent content in My Projects on My Website</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 01 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://example.org/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>YouTube Watch Analysis</title><link>https://example.org/projects/example/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>https://example.org/projects/example/</guid><description>&lt;p>&lt;strong>YouTube Watch Analysis&lt;/strong> is a full-stack application that visualizes your YouTube watch history using charts and custom metrics. It combines a Python-based backend and a React-based frontend to deliver personalized data insights.&lt;/p>
&lt;h2 id="-project-overview">ðŸ—‚ Project Overview&lt;/h2>
&lt;p>This project parses YouTube watch history data, processes it using FastAPI and Python, and displays meaningful charts on a sleek React interface.&lt;/p>
&lt;h3 id="-project-structure">ðŸ“¦ Project Structure&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Backend&lt;/strong>: FastAPI + Python scripts (for YouTube API, Selenium, data processing)&lt;/li>
&lt;li>&lt;strong>Frontend&lt;/strong>: React + Chart.js (user input + chart rendering)&lt;/li>
&lt;li>&lt;strong>Intermediates&lt;/strong>: JSON files to store and merge data&lt;/li>
&lt;/ul>
&lt;h2 id="-technologies-used">ðŸš€ Technologies Used&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Frontend&lt;/strong>: React, Chart.js&lt;/li>
&lt;li>&lt;strong>Backend&lt;/strong>: FastAPI, Python, Selenium, Google API Client&lt;/li>
&lt;li>&lt;strong>Tools&lt;/strong>: JSON, uvicorn&lt;/li>
&lt;/ul>
&lt;h2 id="-api-endpoints">ðŸ”Œ API Endpoints&lt;/h2>
&lt;ul>
&lt;li>&lt;code>POST /start-selenium-task&lt;/code>: Triggers a YouTube data extraction task&lt;/li>
&lt;li>&lt;code>GET /status&lt;/code>: Checks the backend task progress&lt;/li>
&lt;li>&lt;code>GET /data&lt;/code>: Returns the merged, processed watch data&lt;/li>
&lt;/ul>
&lt;h2 id="-how-to-run-the-project">ðŸ§ª How to Run the Project&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Start Backend&lt;/strong>:&lt;/p></description></item></channel></rss>